/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * AIPark API
 * Í∏∞ÏóÖÏó∞Í≥Ñ ÌååÏù¥ÎÑê ÌîÑÎ°úÏ†ùÌä∏ API Î¨∏ÏÑú Î∞±ÏóîÎìú Í∞úÎ∞úÏö©
 * OpenAPI spec version: 1.0.0
 */
export type DownloadGeneratedAudio4Params = {
  bucketRoute: string;
};

export type DownloadGeneratedAudio3Params = {
  bucketRoute: string;
};

export type DownloadGeneratedAudio2Params = {
  bucketRoute: string;
};

export type DownloadGeneratedAudio1Params = {
  bucketRoute: string;
};

export type DownloadGeneratedAudioParams = {
  bucketRoute: string;
};

export type TestFailParams = {
  'Do Would you like to throw an exception?': string;
};

export type DownloadFileParams = {
  path: string;
};

export type ConvertMultipleAudiosBody = {
  sourceAudios: Blob[];
};

export type UploadConcatBody = {
  file: Blob;
};

export type UploadConcatParams = {
  projectId: number;
};

export type UploadFiles1Body = {
  files: Blob[];
};

export type UploadFiles1Params = {
  memberId: number;
  projectId: number;
  audioType: string;
  voiceId: string;
};

export type UploadFilesBody = {
  files: Blob[];
};

export type UploadFilesParams = {
  memberId: number;
  projectId: number;
  audioType: string;
  voiceId: string;
};

export type ConvertSingleTextParams = {
  id: number;
};

export type UploadUnit1Body = {
  file: Blob;
};

export type UploadUnit1Params = {
  detailId: number;
  projectId: number;
};

export type UploadUnitBody = {
  file: Blob;
};

export type UploadUnitParams = {
  detailId: number;
  projectId: number;
};

export type ConvertMultipleVoicesBody = {
  sourceAudios: Blob[];
};

export type ConvertMultipleVoicesParams = {
  voiceId: string;
};

export type UploadTargetAudioBody = {
  targetAudio: Blob;
};

export type TTSSaveDtoApiStatus = (typeof TTSSaveDtoApiStatus)[keyof typeof TTSSaveDtoApiStatus];

export const TTSSaveDtoApiStatus = {
  IN_PROGRESS: 'IN_PROGRESS',
  SUCCESS: 'SUCCESS',
  FAILURE: 'FAILURE',
  PARTIAL_FAILURE: 'PARTIAL_FAILURE',
  CANCELLED: 'CANCELLED',
  NOT_STARTED: 'NOT_STARTED',
} as const;

export interface TTSDetailDto {
  id?: number;
  isDeleted?: boolean;
  projectId?: number;
  unitPitch?: number;
  unitScript?: string;
  unitSequence?: number;
  unitSpeed?: number;
  unitVolume?: number;
  voiceStyleId?: number;
}

export interface TTSSaveDto {
  apiStatus?: TTSSaveDtoApiStatus;
  fullScript?: string;
  globalPitch?: number;
  globalSpeed?: number;
  globalVolume?: number;
  projectId?: number;
  projectName?: string;
  ttsDetails?: TTSDetailDto[];
  voiceStyleId?: number;
}

export interface ResponseDto {
  code?: number;
  message?: string;
  success?: boolean;
}

export interface VCSaveDto {
  id?: number;
}
